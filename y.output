State 47 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    4 dec_loop: declaration SEMICOLON
    5         | declaration SEMICOLON dec_loop

    6 declaration: ident_loop COLON INTEGER
    7            | ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    8 ident_loop: IDENT
    9           | IDENT COMMA ident_loop

   10 statement: var ASSIGN expression
   11          | if_state
   12          | while_state
   13          | dowhile_state
   14          | read_state
   15          | write_state
   16          | CONTINUE
   17          | RETURN expression

   18 if_state: IF bool_expr THEN statement_loop else_loop ENDIF

   19 while_state: WHILE bool_expr BEGINLOOP statement_loop ENDLOOP

   20 dowhile_state: DO BEGINLOOP statement_loop ENDLOOP WHILE bool_expr

   21 read_state: READ var_loop

   22 write_state: WRITE var_loop

   23 var_loop: var
   24         | var COMMA var_loop

   25 else_loop: %empty
   26          | ELSE statement_loop

   27 statement_loop: statement SEMICOLON
   28               | statement SEMICOLON statement_loop

   29 bool_expr: relation_and_expr
   30          | OR relation_and_expr

   31 relation_and_expr: relation_expr
   32                  | AND relation_expr

   33 relation_expr: NOT relation_expr
   34              | expression comp expression
   35              | TRUE
   36              | FALSE
   37              | L_PAREN bool_expr R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 para: expression
   45     | expression COMMA para

   46 t3: IDENT L_PAREN para R_PAREN
   47   | IDENT L_PAREN R_PAREN

   48 t2: SUB t1

   49 t1: var
   50   | NUMBER
   51   | R_PAREN expression L_PAREN

   52 term: t1
   53     | t2
   54     | t3

   55 multi_express: term
   56              | term MULT term
   57              | term DIV term
   58              | term MOD term

   59 expression: multi_express
   60           | multi_express ADD multi_express
   61           | multi_express SUB multi_express

   62 var: IDENT
   63    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGIN_PARAMS (259) 3
END_PARAMS (260) 3
BEGIN_LOCALS (261) 3
END_LOCALS (262) 3
BEGIN_BODY (263) 3
END_BODY (264) 3
INTEGER (265) 6 7
ARRAY (266) 7
OF (267) 7
IF (268) 18
THEN (269) 18
ENDIF (270) 18
ELSE (271) 26
WHILE (272) 19 20
DO (273) 20
BEGINLOOP (274) 19 20
ENDLOOP (275) 19 20
CONTINUE (276) 16
READ (277) 21
WRITE (278) 22
TRUE (279) 35
FALSE (280) 36
RETURN (281) 17
SEMICOLON (282) 3 4 5 27 28
COLON (283) 6 7
COMMA (284) 9 24 45
NUMBER (285) 7 50
IDENT (286) 3 8 9 46 47 62 63
MULT (287) 56
DIV (288) 57
MOD (289) 58
ADD (290) 60
SUB (291) 48 61
EQ (292) 38
NEQ (293) 39
LT (294) 40
GT (295) 41
LTE (296) 42
GTE (297) 43
L_SQUARE_BRACKET (298) 7 63
R_SQUARE_BRACKET (299) 7 63
L_PAREN (300) 37 46 47 51
R_PAREN (301) 37 46 47 51
AND (302) 32
OR (303) 30
NOT (304) 33
ASSIGN (305) 10


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0
function (53)
    on left: 3, on right: 2
dec_loop (54)
    on left: 4 5, on right: 3 5
declaration (55)
    on left: 6 7, on right: 4 5
ident_loop (56)
    on left: 8 9, on right: 6 7 9
statement (57)
    on left: 10 11 12 13 14 15 16 17, on right: 27 28
if_state (58)
    on left: 18, on right: 11
while_state (59)
    on left: 19, on right: 12
dowhile_state (60)
    on left: 20, on right: 13
read_state (61)
    on left: 21, on right: 14
write_state (62)
    on left: 22, on right: 15
var_loop (63)
    on left: 23 24, on right: 21 22 24
else_loop (64)
    on left: 25 26, on right: 18
statement_loop (65)
    on left: 27 28, on right: 3 18 19 20 26 28
bool_expr (66)
    on left: 29 30, on right: 18 19 20 37
relation_and_expr (67)
    on left: 31 32, on right: 29 30
relation_expr (68)
    on left: 33 34 35 36 37, on right: 31 32 33
comp (69)
    on left: 38 39 40 41 42 43, on right: 34
para (70)
    on left: 44 45, on right: 45 46
t3 (71)
    on left: 46 47, on right: 54
t2 (72)
    on left: 48, on right: 53
t1 (73)
    on left: 49 50 51, on right: 48 52
term (74)
    on left: 52 53 54, on right: 55 56 57 58
multi_express (75)
    on left: 55 56 57 58, on right: 59 60 61
expression (76)
    on left: 59 60 61, on right: 10 17 34 44 45 51 63
var (77)
    on left: 62 63, on right: 10 23 24 49


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: function .

    $default  reduce using rule 2 (program)


State 4

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    SEMICOLON  shift, and go to state 6


State 5

    0 $accept: program $end .

    $default  accept


State 6

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 7


State 7

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENT  shift, and go to state 8

    dec_loop     go to state 9
    declaration  go to state 10
    ident_loop   go to state 11


State 8

    8 ident_loop: IDENT .
    9           | IDENT . COMMA ident_loop

    COMMA  shift, and go to state 12

    $default  reduce using rule 8 (ident_loop)


State 9

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop . END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    END_PARAMS  shift, and go to state 13


State 10

    4 dec_loop: declaration . SEMICOLON
    5         | declaration . SEMICOLON dec_loop

    SEMICOLON  shift, and go to state 14


State 11

    6 declaration: ident_loop . COLON INTEGER
    7            | ident_loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 15


State 12

    9 ident_loop: IDENT COMMA . ident_loop

    IDENT  shift, and go to state 8

    ident_loop  go to state 16


State 13

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS . BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 17


State 14

    4 dec_loop: declaration SEMICOLON .
    5         | declaration SEMICOLON . dec_loop

    IDENT  shift, and go to state 8

    $default  reduce using rule 4 (dec_loop)

    dec_loop     go to state 18
    declaration  go to state 10
    ident_loop   go to state 11


State 15

    6 declaration: ident_loop COLON . INTEGER
    7            | ident_loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20


State 16

    9 ident_loop: IDENT COMMA ident_loop .

    $default  reduce using rule 9 (ident_loop)


State 17

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS . dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENT  shift, and go to state 8

    dec_loop     go to state 21
    declaration  go to state 10
    ident_loop   go to state 11


State 18

    5 dec_loop: declaration SEMICOLON dec_loop .

    $default  reduce using rule 5 (dec_loop)


State 19

    6 declaration: ident_loop COLON INTEGER .

    $default  reduce using rule 6 (declaration)


State 20

    7 declaration: ident_loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 21

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop . END_LOCALS BEGIN_BODY statement_loop END_BODY

    END_LOCALS  shift, and go to state 23


State 22

    7 declaration: ident_loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 24


State 23

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS . BEGIN_BODY statement_loop END_BODY

    BEGIN_BODY  shift, and go to state 25


State 24

    7 declaration: ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 26


State 25

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY . statement_loop END_BODY

    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statement       go to state 35
    if_state        go to state 36
    while_state     go to state 37
    dowhile_state   go to state 38
    read_state      go to state 39
    write_state     go to state 40
    statement_loop  go to state 41
    var             go to state 42


State 26

    7 declaration: ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 27

   18 if_state: IF . bool_expr THEN statement_loop else_loop ENDIF

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    R_PAREN  shift, and go to state 50
    AND      shift, and go to state 51
    OR       shift, and go to state 52
    NOT      shift, and go to state 53

    bool_expr          go to state 54
    relation_and_expr  go to state 55
    relation_expr      go to state 56
    t3                 go to state 57
    t2                 go to state 58
    t1                 go to state 59
    term               go to state 60
    multi_express      go to state 61
    expression         go to state 62
    var                go to state 63


State 28

   19 while_state: WHILE . bool_expr BEGINLOOP statement_loop ENDLOOP

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    R_PAREN  shift, and go to state 50
    AND      shift, and go to state 51
    OR       shift, and go to state 52
    NOT      shift, and go to state 53

    bool_expr          go to state 64
    relation_and_expr  go to state 55
    relation_expr      go to state 56
    t3                 go to state 57
    t2                 go to state 58
    t1                 go to state 59
    term               go to state 60
    multi_express      go to state 61
    expression         go to state 62
    var                go to state 63


State 29

   20 dowhile_state: DO . BEGINLOOP statement_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 65


State 30

   16 statement: CONTINUE .

    $default  reduce using rule 16 (statement)


State 31

   21 read_state: READ . var_loop

    IDENT  shift, and go to state 34

    var_loop  go to state 66
    var       go to state 67


State 32

   22 write_state: WRITE . var_loop

    IDENT  shift, and go to state 34

    var_loop  go to state 68
    var       go to state 67


State 33

   17 statement: RETURN . expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 69
    var            go to state 63


State 34

   62 var: IDENT .
   63    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 62 (var)


State 35

   27 statement_loop: statement . SEMICOLON
   28               | statement . SEMICOLON statement_loop

    SEMICOLON  shift, and go to state 71


State 36

   11 statement: if_state .

    $default  reduce using rule 11 (statement)


State 37

   12 statement: while_state .

    $default  reduce using rule 12 (statement)


State 38

   13 statement: dowhile_state .

    $default  reduce using rule 13 (statement)


State 39

   14 statement: read_state .

    $default  reduce using rule 14 (statement)


State 40

   15 statement: write_state .

    $default  reduce using rule 15 (statement)


State 41

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop . END_BODY

    END_BODY  shift, and go to state 72


State 42

   10 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 73


State 43

    7 declaration: ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 74


State 44

   35 relation_expr: TRUE .

    $default  reduce using rule 35 (relation_expr)


State 45

   36 relation_expr: FALSE .

    $default  reduce using rule 36 (relation_expr)


State 46

   50 t1: NUMBER .

    $default  reduce using rule 50 (t1)


State 47

   46 t3: IDENT . L_PAREN para R_PAREN
   47   | IDENT . L_PAREN R_PAREN
   62 var: IDENT .
   63    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70
    L_PAREN           shift, and go to state 75

    L_PAREN   [reduce using rule 62 (var)]
    $default  reduce using rule 62 (var)


State 48

   48 t2: SUB . t1

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 34
    R_PAREN  shift, and go to state 50

    t1   go to state 76
    var  go to state 63


State 49

   37 relation_expr: L_PAREN . bool_expr R_PAREN

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    R_PAREN  shift, and go to state 50
    AND      shift, and go to state 51
    OR       shift, and go to state 52
    NOT      shift, and go to state 53

    bool_expr          go to state 77
    relation_and_expr  go to state 55
    relation_expr      go to state 56
    t3                 go to state 57
    t2                 go to state 58
    t1                 go to state 59
    term               go to state 60
    multi_express      go to state 61
    expression         go to state 62
    var                go to state 63


State 50

   51 t1: R_PAREN . expression L_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 78
    var            go to state 63


State 51

   32 relation_and_expr: AND . relation_expr

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    R_PAREN  shift, and go to state 50
    NOT      shift, and go to state 53

    relation_expr  go to state 79
    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 62
    var            go to state 63


State 52

   30 bool_expr: OR . relation_and_expr

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    R_PAREN  shift, and go to state 50
    AND      shift, and go to state 51
    NOT      shift, and go to state 53

    relation_and_expr  go to state 80
    relation_expr      go to state 56
    t3                 go to state 57
    t2                 go to state 58
    t1                 go to state 59
    term               go to state 60
    multi_express      go to state 61
    expression         go to state 62
    var                go to state 63


State 53

   33 relation_expr: NOT . relation_expr

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    R_PAREN  shift, and go to state 50
    NOT      shift, and go to state 53

    relation_expr  go to state 81
    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 62
    var            go to state 63


State 54

   18 if_state: IF bool_expr . THEN statement_loop else_loop ENDIF

    THEN  shift, and go to state 82


State 55

   29 bool_expr: relation_and_expr .

    $default  reduce using rule 29 (bool_expr)


State 56

   31 relation_and_expr: relation_expr .

    $default  reduce using rule 31 (relation_and_expr)


State 57

   54 term: t3 .

    $default  reduce using rule 54 (term)


State 58

   53 term: t2 .

    $default  reduce using rule 53 (term)


State 59

   52 term: t1 .

    $default  reduce using rule 52 (term)


State 60

   55 multi_express: term .
   56              | term . MULT term
   57              | term . DIV term
   58              | term . MOD term

    MULT  shift, and go to state 83
    DIV   shift, and go to state 84
    MOD   shift, and go to state 85

    $default  reduce using rule 55 (multi_express)


State 61

   59 expression: multi_express .
   60           | multi_express . ADD multi_express
   61           | multi_express . SUB multi_express

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 59 (expression)


State 62

   34 relation_expr: expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    comp  go to state 94


State 63

   49 t1: var .

    $default  reduce using rule 49 (t1)


State 64

   19 while_state: WHILE bool_expr . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 95


State 65

   20 dowhile_state: DO BEGINLOOP . statement_loop ENDLOOP WHILE bool_expr

    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statement       go to state 35
    if_state        go to state 36
    while_state     go to state 37
    dowhile_state   go to state 38
    read_state      go to state 39
    write_state     go to state 40
    statement_loop  go to state 96
    var             go to state 42


State 66

   21 read_state: READ var_loop .

    $default  reduce using rule 21 (read_state)


State 67

   23 var_loop: var .
   24         | var . COMMA var_loop

    COMMA  shift, and go to state 97

    $default  reduce using rule 23 (var_loop)


State 68

   22 write_state: WRITE var_loop .

    $default  reduce using rule 22 (write_state)


State 69

   17 statement: RETURN expression .

    $default  reduce using rule 17 (statement)


State 70

   63 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 98
    var            go to state 63


State 71

   27 statement_loop: statement SEMICOLON .
   28               | statement SEMICOLON . statement_loop

    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    $default  reduce using rule 27 (statement_loop)

    statement       go to state 35
    if_state        go to state 36
    while_state     go to state 37
    dowhile_state   go to state 38
    read_state      go to state 39
    write_state     go to state 40
    statement_loop  go to state 99
    var             go to state 42


State 72

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY .

    $default  reduce using rule 3 (function)


State 73

   10 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 100
    var            go to state 63


State 74

    7 declaration: ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 75

   46 t3: IDENT L_PAREN . para R_PAREN
   47   | IDENT L_PAREN . R_PAREN

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 101

    para           go to state 102
    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 103
    var            go to state 63


State 76

   48 t2: SUB t1 .

    $default  reduce using rule 48 (t2)


State 77

   37 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 104


State 78

   51 t1: R_PAREN expression . L_PAREN

    L_PAREN  shift, and go to state 105


State 79

   32 relation_and_expr: AND relation_expr .

    $default  reduce using rule 32 (relation_and_expr)


State 80

   30 bool_expr: OR relation_and_expr .

    $default  reduce using rule 30 (bool_expr)


State 81

   33 relation_expr: NOT relation_expr .

    $default  reduce using rule 33 (relation_expr)


State 82

   18 if_state: IF bool_expr THEN . statement_loop else_loop ENDIF

    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statement       go to state 35
    if_state        go to state 36
    while_state     go to state 37
    dowhile_state   go to state 38
    read_state      go to state 39
    write_state     go to state 40
    statement_loop  go to state 106
    var             go to state 42


State 83

   56 multi_express: term MULT . term

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3    go to state 57
    t2    go to state 58
    t1    go to state 59
    term  go to state 107
    var   go to state 63


State 84

   57 multi_express: term DIV . term

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3    go to state 57
    t2    go to state 58
    t1    go to state 59
    term  go to state 108
    var   go to state 63


State 85

   58 multi_express: term MOD . term

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3    go to state 57
    t2    go to state 58
    t1    go to state 59
    term  go to state 109
    var   go to state 63


State 86

   60 expression: multi_express ADD . multi_express

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 110
    var            go to state 63


State 87

   61 expression: multi_express SUB . multi_express

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 111
    var            go to state 63


State 88

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 89

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 90

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 91

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 92

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 93

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 94

   34 relation_expr: expression comp . expression

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 112
    var            go to state 63


State 95

   19 while_state: WHILE bool_expr BEGINLOOP . statement_loop ENDLOOP

    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statement       go to state 35
    if_state        go to state 36
    while_state     go to state 37
    dowhile_state   go to state 38
    read_state      go to state 39
    write_state     go to state 40
    statement_loop  go to state 113
    var             go to state 42


State 96

   20 dowhile_state: DO BEGINLOOP statement_loop . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 114


State 97

   24 var_loop: var COMMA . var_loop

    IDENT  shift, and go to state 34

    var_loop  go to state 115
    var       go to state 67


State 98

   63 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 116


State 99

   28 statement_loop: statement SEMICOLON statement_loop .

    $default  reduce using rule 28 (statement_loop)


State 100

   10 statement: var ASSIGN expression .

    $default  reduce using rule 10 (statement)


State 101

   47 t3: IDENT L_PAREN R_PAREN .
   51 t1: R_PAREN . expression L_PAREN

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 47

    $default  reduce using rule 47 (t3)

    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 78
    var            go to state 63


State 102

   46 t3: IDENT L_PAREN para . R_PAREN

    R_PAREN  shift, and go to state 117


State 103

   44 para: expression .
   45     | expression . COMMA para

    COMMA  shift, and go to state 118

    $default  reduce using rule 44 (para)


State 104

   37 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_expr)


State 105

   51 t1: R_PAREN expression L_PAREN .

    $default  reduce using rule 51 (t1)


State 106

   18 if_state: IF bool_expr THEN statement_loop . else_loop ENDIF

    ELSE  shift, and go to state 119

    $default  reduce using rule 25 (else_loop)

    else_loop  go to state 120


State 107

   56 multi_express: term MULT term .

    $default  reduce using rule 56 (multi_express)


State 108

   57 multi_express: term DIV term .

    $default  reduce using rule 57 (multi_express)


State 109

   58 multi_express: term MOD term .

    $default  reduce using rule 58 (multi_express)


State 110

   60 expression: multi_express ADD multi_express .

    $default  reduce using rule 60 (expression)


State 111

   61 expression: multi_express SUB multi_express .

    $default  reduce using rule 61 (expression)


State 112

   34 relation_expr: expression comp expression .

    $default  reduce using rule 34 (relation_expr)


State 113

   19 while_state: WHILE bool_expr BEGINLOOP statement_loop . ENDLOOP

    ENDLOOP  shift, and go to state 121


State 114

   20 dowhile_state: DO BEGINLOOP statement_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 122


State 115

   24 var_loop: var COMMA var_loop .

    $default  reduce using rule 24 (var_loop)


State 116

   63 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 63 (var)


State 117

   46 t3: IDENT L_PAREN para R_PAREN .

    $default  reduce using rule 46 (t3)


State 118

   45 para: expression COMMA . para

    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    R_PAREN  shift, and go to state 50

    para           go to state 123
    t3             go to state 57
    t2             go to state 58
    t1             go to state 59
    term           go to state 60
    multi_express  go to state 61
    expression     go to state 103
    var            go to state 63


State 119

   26 else_loop: ELSE . statement_loop

    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statement       go to state 35
    if_state        go to state 36
    while_state     go to state 37
    dowhile_state   go to state 38
    read_state      go to state 39
    write_state     go to state 40
    statement_loop  go to state 124
    var             go to state 42


State 120

   18 if_state: IF bool_expr THEN statement_loop else_loop . ENDIF

    ENDIF  shift, and go to state 125


State 121

   19 while_state: WHILE bool_expr BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 19 (while_state)


State 122

   20 dowhile_state: DO BEGINLOOP statement_loop ENDLOOP WHILE . bool_expr

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    NUMBER   shift, and go to state 46
    IDENT    shift, and go to state 47
    SUB      shift, and go to state 48
    L_PAREN  shift, and go to state 49
    R_PAREN  shift, and go to state 50
    AND      shift, and go to state 51
    OR       shift, and go to state 52
    NOT      shift, and go to state 53

    bool_expr          go to state 126
    relation_and_expr  go to state 55
    relation_expr      go to state 56
    t3                 go to state 57
    t2                 go to state 58
    t1                 go to state 59
    term               go to state 60
    multi_express      go to state 61
    expression         go to state 62
    var                go to state 63


State 123

   45 para: expression COMMA para .

    $default  reduce using rule 45 (para)


State 124

   26 else_loop: ELSE statement_loop .

    $default  reduce using rule 26 (else_loop)


State 125

   18 if_state: IF bool_expr THEN statement_loop else_loop ENDIF .

    $default  reduce using rule 18 (if_state)


State 126

   20 dowhile_state: DO BEGINLOOP statement_loop ENDLOOP WHILE bool_expr .

    $default  reduce using rule 20 (dowhile_state)
